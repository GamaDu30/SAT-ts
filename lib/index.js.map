{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap dbd23a232986e3f1a343","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./src/math/vector.ts","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./src/math/index.ts","webpack:///./src/math/box.ts","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./src/collision/response.ts","webpack:///./src/math/polygon.ts","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./src/collision/util.ts","webpack:///./src/index.ts","webpack:///./src/math/circle.ts","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","instance","Constructor","TypeError","_defineProperty","_defineProperty2","obj","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","undefined","apply","_classCallCheck2","_createClass2","_interopRequireDefault","_classCallCheck3","_createClass3","Vector","x","arguments","y","other","angle","Math","cos","sin","len","xs","ys","amt","dot","len2","axis","project","scale","projectN","sqrt","a","_vector","_circle","_polygon","_box","Box","Polygon","Circle","_vector2","_circle2","_polygon2","_box2","pos","w","h","it","_index","Response","b","overlapN","overlapV","clear","aInB","bInA","overlap","Number","MAX_VALUE","points","offset","setPoints","calcPoints","edges","normals","push","_recalc","calcPoint","copy","rotate","p1","p2","e","sub","perp","normalize","xMin","yMin","xMax","yMax","point","clone","add","toPolygon","cx","cy","ar","core","version","__e","exec","window","self","Function","__g","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","P","Attributes","_math","_response","flattenPointsOn","normal","result","min","max","isSeparatingAxis","aPos","bPos","aPoints","bPoints","response","rangeA","T_ARRAYS","pop","rangeB","offsetV","T_VECTORS","projectedOffset","_option","_option2","option1","option2","absOverlap","abs","reverse","voronoiRegion","line","dp","LEFT_VORONOI_REGION","RIGHT_VORONOI_REGION","MIDDLE_VORONOI_REGION","pointInCircle","differenceV","radiusSq","distanceSq","testPolygonPolygon","aLen","bLen","_i","_i2","pointInPolygon","poly","TEST_POINT","T_RESPONSE","testCircleCircle","totalRadius","totalRadiusSq","dist","testPolygonCircle","polygon","circle","circlePos","radius","radius2","edge","_i3","next","prev","region","point2","distAbs","testCirclePolygon","_response2","_util","r","corner","$Object","desc","isObject","aFunction","fn","that","document","is","createElement","ctx","hide","has","$export","type","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","createDesc","bitmap","val","toString","valueOf"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SAT-ts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SAT-ts\"] = factory();\n\telse\n\t\troot[\"SAT-ts\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SAT-ts\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SAT-ts\"] = factory();\n\telse\n\t\troot[\"SAT-ts\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(16);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass);\n        global.vector = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Vector = function () {\n        function Vector() {\n            var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            (0, _classCallCheck3.default)(this, Vector);\n\n            this.x = x;\n            this.y = y;\n        }\n        // Copy the values of another Vector into this one.\n        /**\r\n          * @param {Vector} other The other Vector.\r\n          * @return {Vector} This for chaining.\r\n          */\n\n\n        (0, _createClass3.default)(Vector, [{\n            key: 'copy',\n            value: function copy(other) {\n                this.x = other.x;\n                this.y = other.y;\n                return this;\n            }\n        }, {\n            key: 'clone',\n            value: function clone() {\n                return new Vector(this.x, this.y);\n            }\n        }, {\n            key: 'perp',\n            value: function perp() {\n                var x = this.x;\n                this.x = this.y;\n                this.y = -x;\n                return this;\n            }\n        }, {\n            key: 'rotate',\n            value: function rotate(angle) {\n                var x = this.x;\n                var y = this.y;\n                this.x = x * Math.cos(angle) - y * Math.sin(angle);\n                this.y = x * Math.sin(angle) + y * Math.cos(angle);\n                return this;\n            }\n        }, {\n            key: 'reverse',\n            value: function reverse() {\n                this.x = -this.x;\n                this.y = -this.y;\n                return this;\n            }\n        }, {\n            key: 'normalize',\n            value: function normalize() {\n                var d = this.len();\n                if (d > 0) {\n                    this.x = this.x / d;\n                    this.y = this.y / d;\n                }\n                ;\n                return this;\n            }\n        }, {\n            key: 'add',\n            value: function add(other) {\n                this.x += other.x;\n                this.y += other.y;\n                return this;\n            }\n        }, {\n            key: 'sub',\n            value: function sub(other) {\n                this.x -= other.x;\n                this.y -= other.y;\n                return this;\n            }\n        }, {\n            key: 'scale',\n            value: function scale(xs, ys) {\n                this['x'] *= xs;\n                this['y'] *= ys || xs;\n                return this;\n            }\n        }, {\n            key: 'project',\n            value: function project(other) {\n                var amt = this.dot(other) / other.len2();\n                this.x = amt * other.x;\n                this.y = amt * other.y;\n                return this;\n            }\n        }, {\n            key: 'projectN',\n            value: function projectN(other) {\n                var amt = this.dot(other);\n                this.x = amt * other.x;\n                this.y = amt * other.y;\n                return this;\n            }\n        }, {\n            key: 'reflect',\n            value: function reflect(axis) {\n                var x = this.x;\n                var y = this.y;\n                this.project(axis).scale(2);\n                this.x -= x;\n                this.y -= y;\n                return this;\n            }\n        }, {\n            key: 'reflectN',\n            value: function reflectN(axis) {\n                var x = this.x;\n                var y = this.y;\n                this.projectN(axis).scale(2);\n                this.x -= x;\n                this.y -= y;\n                return this;\n            }\n        }, {\n            key: 'dot',\n            value: function dot(other) {\n                return this.x * other.x + this.y * other.y;\n            }\n        }, {\n            key: 'len2',\n            value: function len2() {\n                return this.dot(this);\n            }\n        }, {\n            key: 'len',\n            value: function len() {\n                return Math.sqrt(this.len2());\n            }\n        }]);\n        return Vector;\n    }();\n\n    exports.default = Vector;\n\n    ;\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(10)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(2), __webpack_require__(15), __webpack_require__(8), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./vector'), require('./circle'), require('./polygon'), require('./box'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.vector, global.circle, global.polygon, global.box);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _vector, _circle, _polygon, _box) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Box = exports.Polygon = exports.Circle = exports.Vector = undefined;\n\n  var _vector2 = _interopRequireDefault(_vector);\n\n  var _circle2 = _interopRequireDefault(_circle);\n\n  var _polygon2 = _interopRequireDefault(_polygon);\n\n  var _box2 = _interopRequireDefault(_box);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.Vector = _vector2.default;\n  exports.Circle = _circle2.default;\n  exports.Polygon = _polygon2.default;\n  exports.Box = _box2.default;\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./polygon'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.polygon);\n        global.box = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _polygon) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _polygon2 = _interopRequireDefault(_polygon);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Box = function () {\n        /**\r\n         * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\r\n         * @param {?number=} w The width of the box.\r\n         * @param {?number=} h The height of the box.\r\n         * @constructor\r\n         */\n        function Box() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var w = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var h = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            (0, _classCallCheck3.default)(this, Box);\n\n            this.pos = pos;\n            this.w = w;\n            this.h = h;\n        }\n\n        (0, _createClass3.default)(Box, [{\n            key: 'toPolygon',\n            value: function toPolygon() {\n                var pos = this.pos;\n                var w = this.w;\n                var h = this.h;\n                return new _polygon2.default(new _vector2.default(pos.x, pos.y), [new _vector2.default(), new _vector2.default(w, 0), new _vector2.default(w, h), new _vector2.default(0, h)]);\n            }\n        }]);\n        return Box;\n    }();\n\n    exports.default = Box;\n\n    ;\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require(\"babel-runtime/helpers/classCallCheck\"), require(\"babel-runtime/helpers/createClass\"), require(\"../math/index\"));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.index);\n        global.response = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _index) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Response = function () {\n        // ## Response\n        //\n        // An object representing the result of an intersection. Contains:\n        //  - The two objects participating in the intersection\n        //  - The vector representing the minimum change necessary to extract the first object\n        //    from the second one (as well as a unit vector in that direction and the magnitude\n        //    of the overlap)\n        //  - Whether the first object is entirely inside the second, and vice versa.\n        /**\r\n         * @constructor\r\n         */\n        function Response() {\n            (0, _classCallCheck3.default)(this, Response);\n\n            this.a = null;\n            this.b = null;\n            this.overlapN = new _index.Vector();\n            this.overlapV = new _index.Vector();\n            this.clear();\n        }\n\n        (0, _createClass3.default)(Response, [{\n            key: \"clear\",\n            value: function clear() {\n                this.aInB = true;\n                this.bInA = true;\n                this.overlap = Number.MAX_VALUE;\n            }\n        }]);\n        return Response;\n    }();\n\n    exports.default = Response;\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./box'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.box);\n        global.polygon = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _box) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _box2 = _interopRequireDefault(_box);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Polygon = function () {\n        function Polygon() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            (0, _classCallCheck3.default)(this, Polygon);\n\n            this.pos = pos;\n            this.angle = 0;\n            this.offset = new _vector2.default();\n            this.setPoints(points);\n        }\n\n        (0, _createClass3.default)(Polygon, [{\n            key: 'setPoints',\n            value: function setPoints(points) {\n                var lengthChanged = !this['points'] || this.points.length !== points.length;\n                if (lengthChanged) {\n                    var i = void 0;\n                    var calcPoints = this.calcPoints = [];\n                    var edges = this.edges = [];\n                    var normals = this.normals = [];\n                    // Allocate the vector arrays for the calculated properties\n                    for (i = 0; i < points.length; i++) {\n                        calcPoints.push(new _vector2.default());\n                        edges.push(new _vector2.default());\n                        normals.push(new _vector2.default());\n                    }\n                    ;\n                }\n                ;\n                this.points = points;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: '_recalc',\n            value: function _recalc() {\n                var calcPoints = this.calcPoints;\n                var edges = this.edges;\n                var normals = this.normals;\n                var points = this.points;\n                var offset = this.offset;\n                var angle = this.angle;\n                var len = points.length;\n                var i = void 0;\n                for (i = 0; i < len; i++) {\n                    var calcPoint = calcPoints[i].copy(points[i]);\n                    calcPoint.x += offset.x;\n                    calcPoint.y += offset.y;\n                    if (angle !== 0) {\n                        calcPoint.rotate(angle);\n                    }\n                    ;\n                }\n                ;\n                for (i = 0; i < len; i++) {\n                    var p1 = calcPoints[i];\n                    var p2 = i < len - 1 ? calcPoints[i + 1] : calcPoints[0];\n                    var e = edges[i].copy(p2).sub(p1);\n                    normals[i].copy(e).perp().normalize();\n                }\n                ;\n                return this;\n            }\n        }, {\n            key: 'setAngle',\n            value: function setAngle(angle) {\n                this.angle = angle;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'setOffset',\n            value: function setOffset(offset) {\n                this.offset = offset;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'rotate',\n            value: function rotate(angle) {\n                var points = this.points;\n                var len = points.length;\n                for (var i = 0; i < len; i++) {\n                    points[i].rotate(angle);\n                }\n                ;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'translate',\n            value: function translate() {\n                var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n                var points = this.points;\n                var len = points.length;\n                for (var i = 0; i < len; i++) {\n                    points[i]['x'] += x;\n                    points[i]['y'] += y;\n                }\n                ;\n                this._recalc();\n                return this;\n            }\n        }, {\n            key: 'getAABB',\n            value: function getAABB() {\n                var points = this.calcPoints;\n                var len = points.length;\n                var xMin = points[0]['x'];\n                var yMin = points[0]['y'];\n                var xMax = xMin;\n                var yMax = yMin;\n                for (var i = 1; i < len; i++) {\n                    var point = points[i];\n                    if (point['x'] < xMin) {\n                        xMin = point['x'];\n                    } else if (point['x'] > xMax) {\n                        xMax = point['x'];\n                    } else if (point['y'] < yMin) {\n                        yMin = point['y'];\n                    } else if (point['y'] > yMax) {\n                        yMax = point['y'];\n                    }\n                    ;\n                }\n                ;\n                return new _box2.default(this[\"pos\"].clone().add(new _vector2.default(xMin, yMin)), xMax - xMin, yMax - yMin).toPolygon();\n            }\n        }, {\n            key: 'getCentroid',\n            value: function getCentroid() {\n                var points = this['calcPoints'];\n                var len = points.length;\n                var cx = 0;\n                var cy = 0;\n                var ar = 0;\n                for (var i = 0; i < len; i++) {\n                    var p1 = points[i];\n                    var p2 = i === len - 1 ? points[0] : points[i + 1];\n                    var a = p1['x'] * p2['y'] - p1['y'] * p2['x'];\n                    cx += (p1['x'] + p2['x']) * a;\n                    cy += (p1['y'] + p2['y']) * a;\n                    ar += a;\n                }\n                ;\n                ar = ar * 3;\n                cx = cx / ar;\n                cy = cy / ar;\n                return new _vector2.default(cx, cy);\n            }\n        }]);\n        return Polygon;\n    }();\n\n    exports.default = Polygon;\n\n    ;\n});\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(19);\nvar IE8_DOM_DEFINE = __webpack_require__(25);\nvar toPrimitive = __webpack_require__(27);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(3) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('../math'), require('./response'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.math, global.response);\n        global.util = mod.exports;\n    }\n})(this, function (exports, _math, _response) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.isSeparatingAxis = isSeparatingAxis;\n    exports.pointInCircle = pointInCircle;\n    exports.testPolygonPolygon = testPolygonPolygon;\n    exports.pointInPolygon = pointInPolygon;\n    exports.testCircleCircle = testCircleCircle;\n    exports.testPolygonCircle = testPolygonCircle;\n    exports.testCirclePolygon = testCirclePolygon;\n\n    var _response2 = _interopRequireDefault(_response);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    // ## Object Pools\n    // A pool of `Vector` objects that are used in calculations to avoid\n    // allocating memory.\n    /**\r\n     * @type {Array.<Vector>}\r\n     */\n    var T_VECTORS = [];\n    for (var i = 0; i < 10; i++) {\n        T_VECTORS.push(new _math.Vector());\n    }\n    // A pool of arrays of numbers used in calculations to avoid allocating\n    // memory.\n    /**\r\n     * @type {Array.<Array.<number>>}\r\n     */\n    var T_ARRAYS = [];\n    for (var i = 0; i < 5; i++) {\n        T_ARRAYS.push([]);\n    }\n    // Temporary response used for polygon hit detection.\n    /**\r\n     * @type {Response}\r\n     */\n    var T_RESPONSE = new _response2.default();\n    // Tiny \"point\" polygon used for polygon hit detection.\n    /**\r\n     * @type {Polygon}\r\n     */\n    var TEST_POINT = new _math.Box(new _math.Vector(), 0.000001, 0.000001).toPolygon();\n    // ## Helper Functions\n    // Flattens the specified array of points onto a unit vector axis,\n    // resulting in a one dimensional range of the minimum and\n    // maximum value on that axis.\n    /**\r\n     * @param {Array.<Vector>} points The points to flatten.\r\n     * @param {Vector} normal The unit vector axis to flatten on.\r\n     * @param {Array.<number>} result An array.  After calling this function,\r\n     *   result[0] will be the minimum value,\r\n     *   result[1] will be the maximum value.\r\n     */\n    function flattenPointsOn(points, normal, result) {\n        var min = Number.MAX_VALUE;\n        var max = -Number.MAX_VALUE;\n        var len = points.length;\n        for (var i = 0; i < len; i++) {\n            // The magnitude of the projection of the point onto the normal\n            var dot = points[i].dot(normal);\n            if (dot < min) min = dot;\n            if (dot > max) max = dot;\n        }\n        ;\n        result[0] = min;\n        result[1] = max;\n    }\n    // Check whether two convex polygons are separated by the specified\n    // axis (must be a unit vector).\n    /**\r\n     * @param {Vector} aPos The position of the first polygon.\r\n     * @param {Vector} bPos The position of the second polygon.\r\n     * @param {Array.<Vector>} aPoints The points in the first polygon.\r\n     * @param {Array.<Vector>} bPoints The points in the second polygon.\r\n     * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\r\n     *   will be projected onto this axis.\r\n     * @param {Response=} response A Response object (optional) which will be populated\r\n     *   if the axis is not a separating axis.\r\n     * @return {boolean} true if it is a separating axis, false otherwise.  If false,\r\n     *   and a response is passed in, information about how much overlap and\r\n     *   the direction of the overlap will be populated.\r\n     */\n    function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n        var rangeA = T_ARRAYS.pop();\n        var rangeB = T_ARRAYS.pop();\n        // The magnitude of the offset between the two polygons\n        var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n        var projectedOffset = offsetV.dot(axis);\n        // Project the polygons onto the axis.\n        flattenPointsOn(aPoints, axis, rangeA);\n        flattenPointsOn(bPoints, axis, rangeB);\n        // Move B's range to its position relative to A.\n        rangeB[0] += projectedOffset;\n        rangeB[1] += projectedOffset;\n        if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n            T_VECTORS.push(offsetV);\n            T_ARRAYS.push(rangeA);\n            T_ARRAYS.push(rangeB);\n            return true;\n        }\n        ;\n        // This is not a separating axis. If we're calculating a response, calculate the overlap.\n        if (response) {\n            var overlap = 0;\n            // A starts further left than B\n            if (rangeA[0] < rangeB[0]) {\n                response['aInB'] = false;\n                // A ends before B does. We have to pull A out of B\n                if (rangeA[1] < rangeB[1]) {\n                    overlap = rangeA[1] - rangeB[0];\n                    response['bInA'] = false;\n                    // B is fully inside A.  Pick the shortest way out.\n                } else {\n                    var _option = rangeA[1] - rangeB[0];\n                    var _option2 = rangeB[1] - rangeA[0];\n                    overlap = _option < _option2 ? _option : -_option2;\n                }\n            } else {\n                response['bInA'] = false;\n                // B ends before A ends. We have to push A out of B\n                if (rangeA[1] > rangeB[1]) {\n                    overlap = rangeA[0] - rangeB[1];\n                    response['aInB'] = false;\n                } else {\n                    // A is fully inside B.  Pick the shortest way out.\n                    var option1 = rangeA[1] - rangeB[0];\n                    var option2 = rangeB[1] - rangeA[0];\n                    overlap = option1 < option2 ? option1 : -option2;\n                }\n                ;\n            }\n            // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n            var absOverlap = Math.abs(overlap);\n            if (absOverlap < response['overlap']) {\n                response['overlap'] = absOverlap;\n                response['overlapN'].copy(axis);\n                if (overlap < 0) {\n                    response['overlapN'].reverse();\n                }\n                ;\n            }\n            ;\n        }\n        ;\n        T_VECTORS.push(offsetV);\n        T_ARRAYS.push(rangeA);\n        T_ARRAYS.push(rangeB);\n        return false;\n    }\n    ;\n    // Constants for Voronoi regions\n    /**\r\n     * @const\r\n     */\n    var LEFT_VORONOI_REGION = -1;\n    /**\r\n     * @const\r\n     */\n    var MIDDLE_VORONOI_REGION = 0;\n    /**\r\n     * @const\r\n     */\n    var RIGHT_VORONOI_REGION = 1;\n    // Calculates which Voronoi region a point is on a line segment.\n    // It is assumed that both the line and the point are relative to `(0,0)`\n    //\n    //            |       (0)      |\n    //     (-1)  [S]--------------[E]  (1)\n    //            |       (0)      |\n    /**\r\n     * @param {Vector} line The line segment.\r\n     * @param {Vector} point The point.\r\n     * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\r\n     *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\r\n     *          RIGHT_VORONOI_REGION (1) if it is the right region.\r\n     */\n    function voronoiRegion(line, point) {\n        var len2 = line.len2();\n        var dp = point.dot(line);\n        // If the point is beyond the start of the line, it is in the\n        // left voronoi region.\n        if (dp < 0) {\n            return LEFT_VORONOI_REGION;\n            // If the point is beyond the end of the line, it is in the\n            // right voronoi region.\n        } else if (dp > len2) {\n            return RIGHT_VORONOI_REGION;\n            // Otherwise, it's in the middle one.\n        } else {\n            return MIDDLE_VORONOI_REGION;\n        }\n    }\n    ;\n    // ## Collision Tests\n    // Check if a point is inside a circle.\n    /**\r\n     * @param {Vector} p The point to test.\r\n     * @param {Circle} c The circle to test.\r\n     * @return {boolean} true if the point is inside the circle, false if it is not.\r\n     */\n    function pointInCircle(p, c) {\n        var differenceV = T_VECTORS.pop().copy(p).sub(c['pos']);\n        var radiusSq = c['r'] * c['r'];\n        var distanceSq = differenceV.len2();\n        T_VECTORS.push(differenceV);\n        // If the distance between is smaller than the radius then the point is inside the circle.\n        return distanceSq <= radiusSq;\n    }\n    // Checks whether polygons collide.\n    /**\r\n     * @param {Polygon} a The first polygon.\r\n     * @param {Polygon} b The second polygon.\r\n     * @param {Response=} response Response object (optional) that will be populated if\r\n     *   they interset.\r\n     * @return {boolean} true if they intersect, false if they don't.\r\n     */\n    function testPolygonPolygon(a, b, response) {\n        var aPoints = a['calcPoints'];\n        var aLen = aPoints.length;\n        var bPoints = b['calcPoints'];\n        var bLen = bPoints.length;\n        // If any of the edge normals of A is a separating axis, no intersection.\n        for (var _i = 0; _i < aLen; _i++) {\n            if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, a['normals'][_i], response)) {\n                return false;\n            }\n            ;\n        }\n        ;\n        for (var _i2 = 0; _i2 < bLen; _i2++) {\n            if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, b['normals'][_i2], response)) {\n                return false;\n            }\n            ;\n        }\n        ;\n        // Since none of the edge normals of A or B are a separating axis, there is an intersection\n        // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n        // final overlap vector.\n        if (response) {\n            response['a'] = a;\n            response['b'] = b;\n            response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n        }\n        return true;\n    }\n    // Check if a point is inside a convex polygon.\n    /**\r\n     * @param {Vector} p The point to test.\r\n     * @param {Polygon} poly The polygon to test.\r\n     * @return {boolean} true if the point is inside the polygon, false if it is not.\r\n     */\n    function pointInPolygon(p, poly) {\n        TEST_POINT['pos'].copy(p);\n        T_RESPONSE.clear();\n        var result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\n        if (result) {\n            result = T_RESPONSE['aInB'];\n        }\n        ;\n        return result;\n    }\n    // Check if two circles collide.\n    /**\r\n     * @param {Circle} a The first circle.\r\n     * @param {Circle} b The second circle.\r\n     * @param {Response=} response Response object (optional) that will be populated if\r\n     *   the circles intersect.\r\n     * @return {boolean} true if the circles intersect, false if they don't.\r\n     */\n    function testCircleCircle(a, b, response) {\n        // Check if the distance between the centers of the two\n        // circles is greater than their combined radius.\n        var differenceV = T_VECTORS.pop().copy(b['pos']).sub(a['pos']);\n        var totalRadius = a['r'] + b['r'];\n        var totalRadiusSq = totalRadius * totalRadius;\n        var distanceSq = differenceV.len2();\n        // If the distance is bigger than the combined radius, they don't intersect.\n        if (distanceSq > totalRadiusSq) {\n            T_VECTORS.push(differenceV);\n            return false;\n        }\n        // They intersect.  If we're calculating a response, calculate the overlap.\n        if (response) {\n            var dist = Math.sqrt(distanceSq);\n            response['a'] = a;\n            response['b'] = b;\n            response['overlap'] = totalRadius - dist;\n            response['overlapN'].copy(differenceV.normalize());\n            response['overlapV'].copy(differenceV).scale(response['overlap']);\n            response['aInB'] = a['r'] <= b['r'] && dist <= b['r'] - a['r'];\n            response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\n        }\n        T_VECTORS.push(differenceV);\n        return true;\n    }\n    // Check if a polygon and a circle collide.\n    /**\r\n     * @param {Polygon} polygon The polygon.\r\n     * @param {Circle} circle The circle.\r\n     * @param {Response=} response Response object (optional) that will be populated if\r\n     *   they interset.\r\n     * @return {boolean} true if they intersect, false if they don't.\r\n     */\n    function testPolygonCircle(polygon, circle, response) {\n        // Get the position of the circle relative to the polygon.\n        var circlePos = T_VECTORS.pop().copy(circle['pos']).sub(polygon['pos']);\n        var radius = circle['r'];\n        var radius2 = radius * radius;\n        var points = polygon['calcPoints'];\n        var len = points.length;\n        var edge = T_VECTORS.pop();\n        var point = T_VECTORS.pop();\n        // For each edge in the polygon:\n        for (var _i3 = 0; _i3 < len; _i3++) {\n            var next = _i3 === len - 1 ? 0 : _i3 + 1;\n            var prev = _i3 === 0 ? len - 1 : _i3 - 1;\n            var overlap = 0;\n            var overlapN = null;\n            // Get the edge.\n            edge.copy(polygon['edges'][_i3]);\n            // Calculate the center of the circle relative to the starting point of the edge.\n            point.copy(circlePos).sub(points[_i3]);\n            // If the distance between the center of the circle and the point\n            // is bigger than the radius, the polygon is definitely not fully in\n            // the circle.\n            if (response && point.len2() > radius2) {\n                response['aInB'] = false;\n            }\n            // Calculate which Voronoi region the center of the circle is in.\n            var region = voronoiRegion(edge, point);\n            // If it's the left region:\n            if (region === LEFT_VORONOI_REGION) {\n                // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n                edge.copy(polygon['edges'][prev]);\n                // Calculate the center of the circle relative the starting point of the previous edge\n                var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n                region = voronoiRegion(edge, point2);\n                if (region === RIGHT_VORONOI_REGION) {\n                    // It's in the region we want.  Check if the circle intersects the point.\n                    var dist = point.len();\n                    if (dist > radius) {\n                        // No intersection\n                        T_VECTORS.push(circlePos);\n                        T_VECTORS.push(edge);\n                        T_VECTORS.push(point);\n                        T_VECTORS.push(point2);\n                        return false;\n                    } else if (response) {\n                        // It intersects, calculate the overlap.\n                        response['bInA'] = false;\n                        overlapN = point.normalize();\n                        overlap = radius - dist;\n                    }\n                }\n                T_VECTORS.push(point2);\n                // If it's the right region:\n            } else if (region === RIGHT_VORONOI_REGION) {\n                // We need to make sure we're in the left region on the next edge\n                edge.copy(polygon['edges'][next]);\n                // Calculate the center of the circle relative to the starting point of the next edge.\n                point.copy(circlePos).sub(points[next]);\n                region = voronoiRegion(edge, point);\n                if (region === LEFT_VORONOI_REGION) {\n                    // It's in the region we want.  Check if the circle intersects the point.\n                    var dist = point.len();\n                    if (dist > radius) {\n                        // No intersection\n                        T_VECTORS.push(circlePos);\n                        T_VECTORS.push(edge);\n                        T_VECTORS.push(point);\n                        return false;\n                    } else if (response) {\n                        // It intersects, calculate the overlap.\n                        response['bInA'] = false;\n                        overlapN = point.normalize();\n                        overlap = radius - dist;\n                    }\n                }\n                // Otherwise, it's the middle region:\n            } else {\n                // Need to check if the circle is intersecting the edge,\n                // Change the edge into its \"edge normal\".\n                var normal = edge.perp().normalize();\n                // Find the perpendicular distance between the center of the\n                // circle and the edge.\n                var dist = point.dot(normal);\n                var distAbs = Math.abs(dist);\n                // If the circle is on the outside of the edge, there is no intersection.\n                if (dist > 0 && distAbs > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(normal);\n                    T_VECTORS.push(point);\n                    return false;\n                } else if (response) {\n                    // It intersects, calculate the overlap.\n                    overlapN = normal;\n                    overlap = radius - dist;\n                    // If the center of the circle is on the outside of the edge, or part of the\n                    // circle is on the outside, the circle is not fully inside the polygon.\n                    if (dist >= 0 || overlap < 2 * radius) {\n                        response['bInA'] = false;\n                    }\n                }\n            }\n            // If this is the smallest overlap we've seen, keep it.\n            // (overlapN may be null if the circle was in the wrong Voronoi region).\n            if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\n                response['overlap'] = overlap;\n                response['overlapN'].copy(overlapN);\n            }\n        }\n        // Calculate the final overlap vector - based on the smallest overlap.\n        if (response) {\n            response['a'] = polygon;\n            response['b'] = circle;\n            response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n        }\n        T_VECTORS.push(circlePos);\n        T_VECTORS.push(edge);\n        T_VECTORS.push(point);\n        return true;\n    }\n    // Check if a circle and a polygon collide.\n    //\n    // **NOTE:** This is slightly less efficient than polygonCircle as it just\n    // runs polygonCircle and reverses everything at the end.\n    /**\r\n     * @param {Circle} circle The circle.\r\n     * @param {Polygon} polygon The polygon.\r\n     * @param {Response=} response Response object (optional) that will be populated if\r\n     *   they interset.\r\n     * @return {boolean} true if they intersect, false if they don't.\r\n     */\n    function testCirclePolygon(circle, polygon, response) {\n        // Test the polygon against the circle.\n        var result = testPolygonCircle(polygon, circle, response);\n        if (result && response) {\n            // Swap A and B in the response.\n            var a = response['a'];\n            var aInB = response['aInB'];\n            response['overlapN'].reverse();\n            response['overlapV'].reverse();\n            response['a'] = response['b'];\n            response['b'] = a;\n            response['aInB'] = response['bInA'];\n            response['bInA'] = aInB;\n        }\n        return result;\n    }\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(4), __webpack_require__(7), __webpack_require__(13)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./math'), require('./collision/response'), require('./collision/util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.math, global.response, global.util);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _math, _response, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.testCirclePolygon = exports.testPolygonPolygon = exports.testPolygonCircle = exports.testCircleCircle = exports.Response = exports.Polygon = exports.Circle = exports.Vector = exports.Box = undefined;\n\n  var _response2 = _interopRequireDefault(_response);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.Box = _math.Box;\n  exports.Vector = _math.Vector;\n  exports.Circle = _math.Circle;\n  exports.Polygon = _math.Polygon;\n  exports.Response = _response2.default;\n  exports.testCircleCircle = _util.testCircleCircle;\n  exports.testPolygonCircle = _util.testPolygonCircle;\n  exports.testPolygonPolygon = _util.testPolygonPolygon;\n  exports.testCirclePolygon = _util.testCirclePolygon;\n});\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(2), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('babel-runtime/helpers/classCallCheck'), require('babel-runtime/helpers/createClass'), require('./vector'), require('./box'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.classCallCheck, global.createClass, global.vector, global.box);\n        global.circle = mod.exports;\n    }\n})(this, function (exports, _classCallCheck2, _createClass2, _vector, _box) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\n    var _createClass3 = _interopRequireDefault(_createClass2);\n\n    var _vector2 = _interopRequireDefault(_vector);\n\n    var _box2 = _interopRequireDefault(_box);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var Circle = function () {\n        // ## Circle\n        //\n        // Represents a circle with a position and a radius.\n        // Create a new circle, optionally passing in a position and/or radius. If no position\n        // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\n        // have a radius of `0`.\n        /**\r\n         * @param {Vector=} pos A vector representing the position of the center of the circle\r\n         * @param {?number=} r The radius of the circle\r\n         * @constructor\r\n         */\n        function Circle() {\n            var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _vector2.default();\n            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            (0, _classCallCheck3.default)(this, Circle);\n\n            this.pos = pos;\n            this.r = r;\n        }\n\n        (0, _createClass3.default)(Circle, [{\n            key: 'getAABB',\n            value: function getAABB() {\n                var r = this.r;\n                var corner = this.pos.clone().sub(new _vector2.default(r, r));\n                return new _box2.default(corner, r * 2, r * 2).toPolygon();\n            }\n        }]);\n        return Circle;\n    }();\n\n    exports.default = Circle;\n\n    ;\n});\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(17), __esModule: true };\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(28);\nvar $Object = __webpack_require__(9).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(18);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nvar document = __webpack_require__(11).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(11);\nvar core = __webpack_require__(9);\nvar ctx = __webpack_require__(20);\nvar hide = __webpack_require__(24);\nvar has = __webpack_require__(23);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(12);\nvar createDesc = __webpack_require__(26);\nmodule.exports = __webpack_require__(3) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(3) && !__webpack_require__(10)(function () {\n  return Object.defineProperty(__webpack_require__(21)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(6);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(22);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(3), 'Object', { defineProperty: __webpack_require__(12).f });\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dbd23a232986e3f1a343","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 1\n// module chunks = 0","\r\nexport default class Vector{\r\n    x:number;\r\n    \r\n    y:number;\r\n\r\n    constructor(x:number = 0,y:number = 0){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n // Copy the values of another Vector into this one.\r\n /**\r\n   * @param {Vector} other The other Vector.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n    copy(other: Vector):Vector{\r\n        this.x = other.x;\r\n\r\n        this.y = other.y;\r\n\r\n        return this;\r\n    }\r\n\r\n  // Create a new vector with the same coordinates as this on.\r\n  /**\r\n   * @return {Vector} The new cloned vector\r\n   */\r\n  clone():Vector{\r\n      return new Vector(this.x,this.y);\r\n  }\r\n\r\n  // Change this vector to be perpendicular to what it was before. (Effectively\r\n  // roatates it 90 degrees in a clockwise direction)\r\n  /**\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  perp():Vector{\r\n      var x = this.x;\r\n      this.x = this.y;\r\n      this.y = x;\r\n      return this;\r\n  }\r\n\r\n  // Rotate this vector (counter-clockwise) by the specified angle (in radians).\r\n  /**\r\n   * @param {number} angle The angle to rotate (in radians)\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  rotate(angle:number):Vector{\r\n      var x = this.x;\r\n\r\n      var y = this.y;\r\n\r\n      this.x = x * Math.cos(angle) - y * Math.sin(angle);\r\n\r\n      this.y = x * Math.sin(angle) + y * Math.cos(angle);\r\n\r\n      return this;\r\n  };\r\n\r\n  // Reverse this vector.\r\n  /**\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  reverse():Vector{\r\n      this.x = -this.x;\r\n\r\n      this.y = -this.y;\r\n\r\n      return this;\r\n  };\r\n\r\n\r\n  // Normalize this vector.  (make it have length of `1`)\r\n  /**\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  normalize():Vector{\r\n\r\n      let d = this.len();\r\n\r\n      if(d>0){\r\n\r\n          this.x = this.x/d;\r\n\r\n          this.y = this.y/d;\r\n      };\r\n\r\n      return this;\r\n  };\r\n\r\n  // Add another vector to this one.\r\n  /**\r\n   * @param {Vector} other The other Vector.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  add(other:{x:number,y:number}): Vector{\r\n      this.x+=other.x;\r\n\r\n      this.y+=other.y;\r\n\r\n      return this;\r\n  };\r\n\r\n  // Subtract another vector from this one.\r\n  /**\r\n   * @param {Vector} other The other Vector.\r\n   * @return {Vector} This for chaiing.\r\n   */\r\n  sub(other:{x:number, y:number}):Vector{\r\n    this.x-=other.x;\r\n\r\n    this.y-=other.y;\r\n\r\n    return this;\r\n  };\r\n\r\n  // Scale this vector. An independant scaling factor can be provided\r\n  // for each axis, or a single scaling factor that will scale both `x` and `y`.\r\n  /**\r\n   * @param {number} x The scaling factor in the x direction.\r\n   * @param {?number=} y The scaling factor in the y direction.  If this\r\n   *   is not specified, the x scaling factor will be used.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  scale(xs:number,ys?:number){\r\n    this['x'] *= xs;\r\n\r\n    this['y'] *= ys || xs;\r\n\r\n    return this;\r\n  };\r\n\r\n  // Project this vector on to another vector.\r\n  /**\r\n   * @param {Vector} other The vector to project onto.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  project(other:Vector):Vector{\r\n      let amt = this.dot(other)/other.len2();\r\n\r\n      this.x = amt * other.x;\r\n\r\n      this.y = amt * other.y;\r\n\r\n      return this;\r\n  };\r\n\r\n  // Project this vector onto a vector of unit length. This is slightly more efficient\r\n  // than `project` when dealing with unit vectors.\r\n  /**\r\n   * @param {Vector} other The unit vector to project onto.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  projectN(other:Vector):Vector{\r\n      var amt = this.dot(other);\r\n\r\n      this.x = amt * other.x;\r\n\r\n      this.y = amt * other.y;\r\n\r\n      return this;\r\n  };\r\n\r\n  // Reflect this vector on an arbitrary axis.\r\n  /**\r\n   * @param {Vector} axis The vector representing the axis.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  reflect(axis:Vector):Vector{\r\n      var x = this.x;\r\n\r\n      var y = this.y;\r\n\r\n      this.project(axis).scale(2);\r\n\r\n      this.x-=x;\r\n\r\n      this.y-=y;\r\n\r\n      return this;\r\n  };\r\n\r\n  // Reflect this vector on an arbitrary axis (represented by a unit vector). This is\r\n  // slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\r\n  /**\r\n   * @param {Vector} axis The unit vector representing the axis.\r\n   * @return {Vector} This for chaining.\r\n   */\r\n  reflectN(axis:Vector):Vector{\r\n    var x = this.x;\r\n\r\n    var y = this.y;\r\n\r\n    this.projectN(axis).scale(2);\r\n\r\n    this.x-=x;\r\n\r\n    this.y-=y;\r\n\r\n    return this;\r\n};\r\n\r\n  // Get the dot product of this vector and another.\r\n  /**\r\n   * @param {Vector}  other The vector to dot this one against.\r\n   * @return {number} The dot product.\r\n   */\r\n  dot(other:Vector):number{\r\n      return this.x * other.x + this.y * other.y;\r\n  };\r\n\r\n  // Get the squared length of this vector.\r\n  /**\r\n   * @return {number} The length^2 of this vector.\r\n   */\r\n  len2():number{\r\n      return this.dot(this);\r\n  };\r\n\r\n  // Get the length of this vector.\r\n  /**\r\n   * @return {number} The length of this vector.\r\n   */\r\n  len():number{\r\n      return Math.sqrt(this.len2());\r\n  };\r\n\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/math/vector.ts","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 3\n// module chunks = 0","import Vector from './vector';\r\nimport Circle from './circle';\r\nimport Polygon from './polygon';\r\nimport Box from './box';\r\n\r\nexport {Vector};\r\nexport {Circle};\r\nexport {Polygon};\r\nexport {Box};\n\n\n// WEBPACK FOOTER //\n// ./src/math/index.ts","    import Vector from './vector';\r\n    import Polygon from './polygon';\r\n    // ## Box\r\n    //\r\n    // Represents an axis-aligned box, with a width and height.\r\n\r\n\r\n    // Create a new box, with the specified position, width, and height. If no position\r\n    // is given, the position will be `(0,0)`. If no width or height are given, they will\r\n    // be set to `0`.\r\n    export default class Box {\r\n        \r\n    /**\r\n     * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\r\n     * @param {?number=} w The width of the box.\r\n     * @param {?number=} h The height of the box.\r\n     * @constructor\r\n     */\r\n    constructor(pos:Vector = new Vector(), w:number = 0, h:number = 0){\r\n        this.pos = pos;\r\n\r\n        this.w = w;\r\n\r\n        this.h = h;\r\n    };\r\n\r\n    pos: Vector;\r\n    \r\n    w: number;\r\n    \r\n    h: number;\r\n\r\n    // Returns a polygon whose edges are the same as this box.\r\n    /**\r\n     * @return {Polygon} A new Polygon that represents this box.\r\n     */\r\n    toPolygon():Polygon{\r\n        let pos = this.pos;\r\n        let w = this.w;\r\n        let h = this.h;\r\n\r\n        return new Polygon(new Vector(pos.x, pos.y),[\r\n            new Vector(), new Vector(w, 0),\r\n            new Vector(w, h), new Vector(0,h)\r\n        ]);\r\n    };\r\n\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/math/box.ts","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 6\n// module chunks = 0","import { Vector } from \"../math/index\";\r\n\r\nexport default class Response{\r\n    // ## Response\r\n    //\r\n    // An object representing the result of an intersection. Contains:\r\n    //  - The two objects participating in the intersection\r\n    //  - The vector representing the minimum change necessary to extract the first object\r\n    //    from the second one (as well as a unit vector in that direction and the magnitude\r\n    //    of the overlap)\r\n    //  - Whether the first object is entirely inside the second, and vice versa.\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(){\r\n        this.a = null;\r\n        this.b = null;\r\n        this.overlapN = new Vector();\r\n        this.overlapV = new Vector();\r\n        this.clear();\r\n    };\r\n\r\n    a: any;\r\n\r\n    b: any;\r\n\r\n    overlapN: Vector;\r\n\r\n    overlapV: Vector;\r\n\r\n    aInB: boolean;\r\n\r\n    bInA: boolean;\r\n\r\n    overlap: number;\r\n\r\n    clear(){\r\n        this.aInB = true;\r\n\r\n        this.bInA = true;\r\n\r\n        this.overlap = Number.MAX_VALUE;\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/collision/response.ts","  // ## Polygon\r\n  //\r\n  // Represents a *convex* polygon with any number of points (specified in counter-clockwise order)\r\n  //\r\n  // Note: Do _not_ manually change the `points`, `angle`, or `offset` properties. Use the\r\n  // provided setters. Otherwise the calculated properties will not be updated correctly.\r\n  //\r\n  // `pos` can be changed directly.\r\n\r\n  // Create a new polygon, passing in a position vector, and an array of points (represented\r\n  // by vectors relative to the position vector). If no position is passed in, the position\r\n  // of the polygon will be `(0,0)`.\r\n  /**\r\n   * @param {Vector=} pos A vector representing the origin of the polygon. (all other\r\n   *   points are relative to this one)\r\n   * @param {Array.<Vector>=} points An array of vectors representing the points in the polygon,\r\n   *   in counter-clockwise order.\r\n   * @constructor\r\n   */\r\n\r\n   import Vector from './vector';\r\n   import Box from './box';\r\n\r\n   export default class Polygon{\r\n       pos: Vector;\r\n\r\n       angle: number;\r\n\r\n       offset: Vector;\r\n\r\n       points: Array<Vector>;\r\n\r\n       calcPoints: Array<Vector>;\r\n\r\n       edges: Array<Vector>;\r\n\r\n       normals: Array<Vector>;\r\n\r\n       constructor(pos:Vector = new Vector(), points:Array<Vector> = []){\r\n           this.pos = pos;\r\n\r\n           this.angle = 0;\r\n\r\n           this.offset = new Vector();\r\n\r\n           this.setPoints(points);\r\n       };\r\n\r\n\r\n        // Set the points of the polygon.\r\n        //\r\n        // Note: The points are counter-clockwise *with respect to the coordinate system*.\r\n        // If you directly draw the points on a screen that has the origin at the top-left corner\r\n        // it will _appear_ visually that the points are being specified clockwise. This is just\r\n        // because of the inversion of the Y-axis when being displayed.\r\n        /**\r\n         * @param {Array.<Vector>=} points An array of vectors representing the points in the polygon,\r\n         *   in counter-clockwise order.\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n       setPoints(points:Array<Vector>):Polygon{\r\n           let lengthChanged = !this['points'] || this.points.length !== points.length;\r\n\r\n           if(lengthChanged){\r\n                let i;\r\n                let calcPoints:any = this.calcPoints = [];\r\n                let edges:any = this.edges = [];\r\n                let normals:any = this.normals = [];\r\n                // Allocate the vector arrays for the calculated properties\r\n                for (i = 0; i < points.length; i++) {\r\n                    calcPoints.push(new Vector());\r\n                    edges.push(new Vector());\r\n                    normals.push(new Vector());\r\n                };\r\n           };     \r\n           this.points = points;\r\n           this._recalc();\r\n           return this;    \r\n       };\r\n\r\n        // Computes the calculated collision polygon. Applies the `angle` and `offset` to the original points then recalculates the\r\n        // edges and normals of the collision polygon.\r\n        /**\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n       private _recalc():Polygon{\r\n           let calcPoints = this.calcPoints;\r\n\r\n           let edges = this.edges;\r\n\r\n           let normals = this.normals;\r\n\r\n           let points = this.points;\r\n\r\n           let offset = this.offset;\r\n\r\n           let angle = this.angle;\r\n\r\n           let len = points.length;\r\n\r\n           let i;\r\n\r\n           for(i = 0; i <len; i++){\r\n               let calcPoint = calcPoints[i].copy(points[i]);\r\n               calcPoint.x += offset.x;\r\n               calcPoint.y += offset.y;\r\n               if(angle !== 0){\r\n                   calcPoint.rotate(angle);\r\n               };\r\n           };\r\n\r\n           for(i = 0;i <len; i++){\r\n               let p1 = calcPoints[i];\r\n               let p2 = i < len-1 ? calcPoints[i+1] : calcPoints[0];\r\n               let e = edges[i].copy(p2).sub(p1);\r\n               normals[i].copy(e).perp().normalize();\r\n           };\r\n\r\n           return this;\r\n       };\r\n\r\n        // Set the current rotation angle of the polygon.\r\n        /**\r\n         * @param {number} angle The current rotation angle (in radians).\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n        setAngle(angle:number):Polygon{\r\n            this.angle = angle;\r\n\r\n            this._recalc();\r\n\r\n            return this;\r\n        };\r\n\r\n        // Set the current offset to apply to the `points` before applying the `angle` rotation.\r\n        /**\r\n         * @param {Vector} offset The new offset vector.\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n        setOffset(offset:Vector):Polygon{\r\n            this.offset = offset;\r\n            \r\n            this._recalc();\r\n\r\n            return this;\r\n        };\r\n\r\n        // Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\r\n        //\r\n        // Note: This changes the **original** points (so any `angle` will be applied on top of this rotation).\r\n        /**\r\n         * @param {number} angle The angle to rotate (in radians)\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n        rotate(angle:number):Polygon{\r\n            let points = this.points;\r\n            \r\n            let len = points.length;\r\n\r\n            for(var i = 0;i < len; i++){\r\n                points[i].rotate(angle);\r\n            };\r\n\r\n            this._recalc();\r\n\r\n            return this;\r\n        };\r\n\r\n        // Translates the points of this polygon by a specified amount relative to the origin of *its own coordinate\r\n        // system* (i.e. `pos`).\r\n        //\r\n        // This is most useful to change the \"center point\" of a polygon. If you just want to move the whole polygon, change\r\n        // the coordinates of `pos`.\r\n        //\r\n        // Note: This changes the **original** points (so any `offset` will be applied on top of this translation)\r\n        /**\r\n         * @param {number} x The horizontal amount to translate.\r\n         * @param {number} y The vertical amount to translate.\r\n         * @return {Polygon} This for chaining.\r\n         */\r\n        translate(x:number = 0, y:number = 0):Polygon{\r\n            let points = this.points;\r\n\r\n            let len = points.length;\r\n\r\n            for(var i = 0; i<len; i++){\r\n                points[i]['x'] += x;\r\n                points[i]['y'] += y;\r\n            };\r\n\r\n            this._recalc();\r\n\r\n            return this;\r\n        };\r\n\r\n        // Compute the axis-aligned bounding box. Any current state\r\n        // (translations/rotations) will be applied before constructing the AABB.\r\n        //\r\n        // Note: Returns a _new_ `Polygon` each time you call this.\r\n        /**\r\n         * @return {Polygon} The AABB\r\n         */\r\n        getAABB():Polygon{\r\n            let points = this.calcPoints;\r\n\r\n            let len = points.length;\r\n\r\n            let xMin = points[0]['x'];\r\n            let yMin = points[0]['y'];\r\n            let xMax = xMin;\r\n            let yMax = yMin;\r\n\r\n            for(var i =1; i<len; i++){\r\n                let point = points[i];\r\n\r\n                if(point['x']<xMin){\r\n                    xMin = point['x'];\r\n                } else if(point['x']>xMax){\r\n                    xMax = point['x'];\r\n                } else if(point['y']<yMin){\r\n                    yMin = point['y'];\r\n                } else if(point['y']>yMax){\r\n                    yMax = point['y'];\r\n                };\r\n            };\r\n            return new Box(this[\"pos\"].clone().add(new Vector(xMin, yMin)), xMax - xMin, yMax - yMin).toPolygon();\r\n        };\r\n\r\n        // Compute the centroid (geometric center) of the polygon. Any current state\r\n        // (translations/rotations) will be applied before computing the centroid.\r\n        //\r\n        // See https://en.wikipedia.org/wiki/Centroid#Centroid_of_a_polygon\r\n        //\r\n        // Note: Returns a _new_ `Vector` each time you call this.\r\n        /**\r\n         * @return {Vector} A Vector that contains the coordinates of the Centroid.\r\n         */\r\n        getCentroid():Vector{\r\n            let points = this['calcPoints'];\r\n\r\n            let len = points.length;\r\n\r\n            let cx = 0;\r\n            let cy = 0;\r\n            let ar = 0;\r\n\r\n            for(var i = 0; i < len; i++){\r\n                let p1 = points[i];\r\n\r\n                let p2 = i === len - 1 ? points[0] : points[i+1];\r\n\r\n                var a = p1['x'] *p2['y'] - p1['y']*p2['x'];\r\n                cx += (p1['x'] + p2['x']) * a;\r\n                cy += (p1['y'] + p2['y']) * a;\r\n                ar += a;\r\n            };\r\n\r\n            ar = ar * 3;\r\n            cx = cx / ar;\r\n            cy = cy / ar;\r\n            \r\n            return new Vector(cx, cy);\r\n        };\r\n\r\n   };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/polygon.ts","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 9\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 10\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 11\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 12\n// module chunks = 0","import {Vector, Box} from '../math';\r\nimport Response from './response';\r\nimport { Circle } from '../index';\r\nimport Polygon from '../math/polygon';\r\n\r\n// ## Object Pools\r\n\r\n// A pool of `Vector` objects that are used in calculations to avoid\r\n// allocating memory.\r\n/**\r\n * @type {Array.<Vector>}\r\n */\r\nlet T_VECTORS:Array<Vector>  = [];\r\n\r\nfor (var i = 0; i < 10; i++) { T_VECTORS.push(new Vector()); }\r\n\r\n// A pool of arrays of numbers used in calculations to avoid allocating\r\n// memory.\r\n/**\r\n * @type {Array.<Array.<number>>}\r\n */\r\nlet T_ARRAYS:Array<Array<number>> = [];\r\n\r\nfor (var i = 0; i < 5; i++) { T_ARRAYS.push([]); }\r\n\r\n// Temporary response used for polygon hit detection.\r\n/**\r\n * @type {Response}\r\n */\r\nlet T_RESPONSE = new Response(); \r\n\r\n// Tiny \"point\" polygon used for polygon hit detection.\r\n/**\r\n * @type {Polygon}\r\n */\r\nlet TEST_POINT = new Box(new Vector(), 0.000001, 0.000001).toPolygon();\r\n\r\n\r\n// ## Helper Functions\r\n\r\n// Flattens the specified array of points onto a unit vector axis,\r\n// resulting in a one dimensional range of the minimum and\r\n// maximum value on that axis.\r\n/**\r\n * @param {Array.<Vector>} points The points to flatten.\r\n * @param {Vector} normal The unit vector axis to flatten on.\r\n * @param {Array.<number>} result An array.  After calling this function,\r\n *   result[0] will be the minimum value,\r\n *   result[1] will be the maximum value.\r\n */\r\n\r\n function flattenPointsOn(points:Array<Vector>, normal:Vector, result:Array<number>) {\r\n     let min = Number.MAX_VALUE;\r\n\r\n     let max = -Number.MAX_VALUE;\r\n\r\n     let len = points.length;\r\n\r\n     for(var i = 0; i < len; i++){\r\n         // The magnitude of the projection of the point onto the normal\r\n         let dot = points[i].dot(normal);\r\n         if(dot < min) min = dot;\r\n         if(dot > max) max = dot;\r\n     };\r\n     result[0] = min;\r\n     result[1] = max;\r\n }\r\n\r\n // Check whether two convex polygons are separated by the specified\r\n// axis (must be a unit vector).\r\n/**\r\n * @param {Vector} aPos The position of the first polygon.\r\n * @param {Vector} bPos The position of the second polygon.\r\n * @param {Array.<Vector>} aPoints The points in the first polygon.\r\n * @param {Array.<Vector>} bPoints The points in the second polygon.\r\n * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\r\n *   will be projected onto this axis.\r\n * @param {Response=} response A Response object (optional) which will be populated\r\n *   if the axis is not a separating axis.\r\n * @return {boolean} true if it is a separating axis, false otherwise.  If false,\r\n *   and a response is passed in, information about how much overlap and\r\n *   the direction of the overlap will be populated.\r\n */\r\nexport function isSeparatingAxis(aPos:Vector, bPos: Vector, aPoints:Array<Vector>, bPoints: Array<Vector>, axis:Vector, response:Response): boolean{\r\n    let rangeA = T_ARRAYS.pop();\r\n\r\n    let rangeB = T_ARRAYS.pop();\r\n\r\n    // The magnitude of the offset between the two polygons\r\n    let offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\r\n    let projectedOffset = offsetV.dot(axis);\r\n\r\n    // Project the polygons onto the axis.\r\n    flattenPointsOn(aPoints, axis, rangeA);\r\n    flattenPointsOn(bPoints, axis, rangeB);\r\n\r\n    // Move B's range to its position relative to A.\r\n    rangeB[0] += projectedOffset;\r\n    rangeB[1] += projectedOffset;\r\n\r\n    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\r\n        T_VECTORS.push(offsetV);\r\n        T_ARRAYS.push(rangeA);\r\n        T_ARRAYS.push(rangeB);\r\n        return true;\r\n    };\r\n\r\n    // This is not a separating axis. If we're calculating a response, calculate the overlap.\r\n    if(response){\r\n        let overlap = 0;\r\n        // A starts further left than B\r\n        if(rangeA[0]<rangeB[0]){\r\n            response['aInB'] = false;\r\n            // A ends before B does. We have to pull A out of B\r\n            if(rangeA[1]<rangeB[1]){\r\n                overlap = rangeA[1] - rangeB[0];\r\n                response['bInA'] = false;\r\n                // B is fully inside A.  Pick the shortest way out.\r\n            } else {\r\n                let option1 = rangeA[1] - rangeB[0];\r\n                let option2 = rangeB[1] - rangeA[0];\r\n                overlap = option1 < option2 ? option1 : -option2;\r\n            }\r\n        } else {\r\n            response['bInA'] = false;\r\n            // B ends before A ends. We have to push A out of B\r\n            if(rangeA[1] > rangeB[1]){\r\n                overlap = rangeA[0] - rangeB[1];\r\n                response ['aInB'] = false\r\n            } else {\r\n                // A is fully inside B.  Pick the shortest way out.\r\n                var option1 = rangeA[1] - rangeB[0];\r\n                var option2 = rangeB[1] - rangeA[0];\r\n                overlap = option1 < option2 ? option1 : -option2;\r\n            };\r\n        }\r\n        // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\r\n        let absOverlap = Math.abs(overlap);\r\n        if(absOverlap < response['overlap']){\r\n            response['overlap'] = absOverlap;\r\n            response['overlapN'].copy(axis);\r\n            if (overlap < 0) {\r\n                response['overlapN'].reverse();\r\n            };\r\n        };\r\n    };\r\n    T_VECTORS.push(offsetV);\r\n    T_ARRAYS.push(rangeA);\r\n    T_ARRAYS.push(rangeB);\r\n    return false;\r\n};\r\n\r\n\r\n// Constants for Voronoi regions\r\n/**\r\n * @const\r\n */\r\nconst LEFT_VORONOI_REGION = -1;\r\n/**\r\n * @const\r\n */\r\nconst MIDDLE_VORONOI_REGION = 0;\r\n/**\r\n * @const\r\n */\r\nconst RIGHT_VORONOI_REGION = 1;\r\n\r\n// Calculates which Voronoi region a point is on a line segment.\r\n// It is assumed that both the line and the point are relative to `(0,0)`\r\n//\r\n//            |       (0)      |\r\n//     (-1)  [S]--------------[E]  (1)\r\n//            |       (0)      |\r\n/**\r\n * @param {Vector} line The line segment.\r\n * @param {Vector} point The point.\r\n * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\r\n *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\r\n *          RIGHT_VORONOI_REGION (1) if it is the right region.\r\n */\r\n\r\n function voronoiRegion(line: Vector, point: Vector): number{\r\n     let len2 = line.len2();\r\n\r\n     let dp = point.dot(line);\r\n    // If the point is beyond the start of the line, it is in the\r\n    // left voronoi region.\r\n    if(dp < 0){\r\n        return LEFT_VORONOI_REGION;\r\n    // If the point is beyond the end of the line, it is in the\r\n    // right voronoi region.\r\n    } else if(dp > len2){\r\n        return RIGHT_VORONOI_REGION;\r\n    // Otherwise, it's in the middle one.\r\n    } else {\r\n        return MIDDLE_VORONOI_REGION;\r\n    }\r\n };\r\n\r\n// ## Collision Tests\r\n\r\n// Check if a point is inside a circle.\r\n/**\r\n * @param {Vector} p The point to test.\r\n * @param {Circle} c The circle to test.\r\n * @return {boolean} true if the point is inside the circle, false if it is not.\r\n */\r\n\r\n export function pointInCircle(p:Vector,c:Circle):boolean{\r\n     let differenceV = T_VECTORS.pop().copy(p).sub(c['pos']);\r\n     let radiusSq = c['r'] * c['r'];\r\n     let distanceSq = differenceV.len2();\r\n     T_VECTORS.push(differenceV);\r\n     // If the distance between is smaller than the radius then the point is inside the circle.\r\n    return distanceSq <= radiusSq;\r\n }\r\n\r\n\r\n// Checks whether polygons collide.\r\n/**\r\n * @param {Polygon} a The first polygon.\r\n * @param {Polygon} b The second polygon.\r\n * @param {Response=} response Response object (optional) that will be populated if\r\n *   they interset.\r\n * @return {boolean} true if they intersect, false if they don't.\r\n */\r\nexport function testPolygonPolygon(a:Polygon, b:Polygon, response:Response){\r\n    let aPoints = a['calcPoints'];\r\n    let aLen = aPoints.length;\r\n\r\n    let bPoints = b['calcPoints'];\r\n    let bLen = bPoints.length;\r\n\r\n     // If any of the edge normals of A is a separating axis, no intersection.\r\n     for(let i = 0;i < aLen; i++){\r\n         if(isSeparatingAxis(a['pos'],b['pos'],aPoints,bPoints,a['normals'][i],response)){\r\n             return false;\r\n         };\r\n     };\r\n\r\n     for(let i = 0; i < bLen; i++){\r\n        if(isSeparatingAxis(a['pos'],b['pos'],aPoints,bPoints,b['normals'][i],response)){\r\n            return false;\r\n        };\r\n     };\r\n\r\n    // Since none of the edge normals of A or B are a separating axis, there is an intersection\r\n    // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\r\n    // final overlap vector.\r\n    if (response) {\r\n        response['a'] = a;\r\n        response['b'] = b;\r\n        response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\r\n      }\r\n      return true;\r\n}\r\n\r\n\r\n\r\n// Check if a point is inside a convex polygon.\r\n/**\r\n * @param {Vector} p The point to test.\r\n * @param {Polygon} poly The polygon to test.\r\n * @return {boolean} true if the point is inside the polygon, false if it is not.\r\n */\r\nexport function pointInPolygon(p: Vector, poly: Polygon): boolean{\r\n    TEST_POINT['pos'].copy(p);\r\n    T_RESPONSE.clear();\r\n    let result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\r\n    if(result){\r\n        result = T_RESPONSE['aInB'];\r\n    };\r\n    return result;\r\n} \r\n\r\n\r\n// Check if two circles collide.\r\n/**\r\n * @param {Circle} a The first circle.\r\n * @param {Circle} b The second circle.\r\n * @param {Response=} response Response object (optional) that will be populated if\r\n *   the circles intersect.\r\n * @return {boolean} true if the circles intersect, false if they don't.\r\n */\r\nexport function testCircleCircle(a:Circle, b:Circle, response: Response) {\r\n    // Check if the distance between the centers of the two\r\n    // circles is greater than their combined radius.\r\n    let differenceV = T_VECTORS.pop().copy(b['pos']).sub(a['pos']);\r\n    let totalRadius = a['r'] + b['r'];\r\n    let totalRadiusSq = totalRadius * totalRadius;\r\n    let distanceSq = differenceV.len2();\r\n    // If the distance is bigger than the combined radius, they don't intersect.\r\n    if (distanceSq > totalRadiusSq) {\r\n      T_VECTORS.push(differenceV);\r\n      return false;\r\n    }\r\n    // They intersect.  If we're calculating a response, calculate the overlap.\r\n    if (response) {\r\n      let dist = Math.sqrt(distanceSq);\r\n      response['a'] = a;\r\n      response['b'] = b;\r\n      response['overlap'] = totalRadius - dist;\r\n      response['overlapN'].copy(differenceV.normalize());\r\n      response['overlapV'].copy(differenceV).scale(response['overlap']);\r\n      response['aInB']= a['r'] <= b['r'] && dist <= b['r'] - a['r'];\r\n      response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\r\n    }\r\n    T_VECTORS.push(differenceV);\r\n    return true;\r\n  }\r\n\r\n\r\n// Check if a polygon and a circle collide.\r\n/**\r\n * @param {Polygon} polygon The polygon.\r\n * @param {Circle} circle The circle.\r\n * @param {Response=} response Response object (optional) that will be populated if\r\n *   they interset.\r\n * @return {boolean} true if they intersect, false if they don't.\r\n */\r\nexport function testPolygonCircle(polygon:Polygon, circle:Circle, response:Response) {\r\n    // Get the position of the circle relative to the polygon.\r\n    let circlePos = T_VECTORS.pop().copy(circle['pos']).sub(polygon['pos']);\r\n    let radius = circle['r'];\r\n    let radius2 = radius * radius;\r\n    let points = polygon['calcPoints'];\r\n    let len = points.length;\r\n    let edge = T_VECTORS.pop();\r\n    let point = T_VECTORS.pop();\r\n\r\n    // For each edge in the polygon:\r\n    for (let i = 0; i < len; i++) {\r\n      let next = i === len - 1 ? 0 : i + 1;\r\n      let prev = i === 0 ? len - 1 : i - 1;\r\n      let overlap = 0;\r\n      let overlapN = null;\r\n\r\n      // Get the edge.\r\n      edge.copy(polygon['edges'][i]);\r\n      // Calculate the center of the circle relative to the starting point of the edge.\r\n      point.copy(circlePos).sub(points[i]);\r\n\r\n      // If the distance between the center of the circle and the point\r\n      // is bigger than the radius, the polygon is definitely not fully in\r\n      // the circle.\r\n      if (response && point.len2() > radius2) {\r\n        response['aInB'] = false;\r\n      }\r\n\r\n      // Calculate which Voronoi region the center of the circle is in.\r\n      var region = voronoiRegion(edge, point);\r\n      // If it's the left region:\r\n      if (region === LEFT_VORONOI_REGION) {\r\n        // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\r\n        edge.copy(polygon['edges'][prev]);\r\n        // Calculate the center of the circle relative the starting point of the previous edge\r\n        var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\r\n        region = voronoiRegion(edge, point2);\r\n        if (region === RIGHT_VORONOI_REGION) {\r\n          // It's in the region we want.  Check if the circle intersects the point.\r\n          var dist = point.len();\r\n          if (dist > radius) {\r\n            // No intersection\r\n            T_VECTORS.push(circlePos);\r\n            T_VECTORS.push(edge);\r\n            T_VECTORS.push(point);\r\n            T_VECTORS.push(point2);\r\n            return false;\r\n          } else if (response) {\r\n            // It intersects, calculate the overlap.\r\n            response['bInA'] = false;\r\n            overlapN = point.normalize();\r\n            overlap = radius - dist;\r\n          }\r\n        }\r\n        T_VECTORS.push(point2);\r\n      // If it's the right region:\r\n      } else if (region === RIGHT_VORONOI_REGION) {\r\n        // We need to make sure we're in the left region on the next edge\r\n        edge.copy(polygon['edges'][next]);\r\n        // Calculate the center of the circle relative to the starting point of the next edge.\r\n        point.copy(circlePos).sub(points[next]);\r\n        region = voronoiRegion(edge, point);\r\n        if (region === LEFT_VORONOI_REGION) {\r\n          // It's in the region we want.  Check if the circle intersects the point.\r\n          var dist = point.len();\r\n          if (dist > radius) {\r\n            // No intersection\r\n            T_VECTORS.push(circlePos);\r\n            T_VECTORS.push(edge);\r\n            T_VECTORS.push(point);\r\n            return false;\r\n          } else if (response) {\r\n            // It intersects, calculate the overlap.\r\n            response['bInA'] = false;\r\n            overlapN = point.normalize();\r\n            overlap = radius - dist;\r\n          }\r\n        }\r\n      // Otherwise, it's the middle region:\r\n      } else {\r\n        // Need to check if the circle is intersecting the edge,\r\n        // Change the edge into its \"edge normal\".\r\n        var normal = edge.perp().normalize();\r\n        // Find the perpendicular distance between the center of the\r\n        // circle and the edge.\r\n        var dist = point.dot(normal);\r\n        var distAbs = Math.abs(dist);\r\n        // If the circle is on the outside of the edge, there is no intersection.\r\n        if (dist > 0 && distAbs > radius) {\r\n          // No intersection\r\n          T_VECTORS.push(circlePos);\r\n          T_VECTORS.push(normal);\r\n          T_VECTORS.push(point);\r\n          return false;\r\n        } else if (response) {\r\n          // It intersects, calculate the overlap.\r\n          overlapN = normal;\r\n          overlap = radius - dist;\r\n          // If the center of the circle is on the outside of the edge, or part of the\r\n          // circle is on the outside, the circle is not fully inside the polygon.\r\n          if (dist >= 0 || overlap < 2 * radius) {\r\n            response['bInA'] = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If this is the smallest overlap we've seen, keep it.\r\n      // (overlapN may be null if the circle was in the wrong Voronoi region).\r\n      if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\r\n        response['overlap'] = overlap;\r\n        response['overlapN'].copy(overlapN);\r\n      }\r\n    }\r\n\r\n    // Calculate the final overlap vector - based on the smallest overlap.\r\n    if (response) {\r\n      response['a'] = polygon;\r\n      response['b'] = circle;\r\n      response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\r\n    }\r\n    T_VECTORS.push(circlePos);\r\n    T_VECTORS.push(edge);\r\n    T_VECTORS.push(point);\r\n    return true;\r\n  }\r\n\r\n  \r\n// Check if a circle and a polygon collide.\r\n//\r\n// **NOTE:** This is slightly less efficient than polygonCircle as it just\r\n// runs polygonCircle and reverses everything at the end.\r\n/**\r\n * @param {Circle} circle The circle.\r\n * @param {Polygon} polygon The polygon.\r\n * @param {Response=} response Response object (optional) that will be populated if\r\n *   they interset.\r\n * @return {boolean} true if they intersect, false if they don't.\r\n */\r\n\r\nexport function testCirclePolygon(circle:Circle, polygon:Polygon, response:Response) {\r\n    // Test the polygon against the circle.\r\n    var result = testPolygonCircle(polygon, circle, response);\r\n    if (result && response) {\r\n      // Swap A and B in the response.\r\n      var a = response['a'];\r\n      var aInB = response['aInB'];\r\n      response['overlapN'].reverse();\r\n      response['overlapV'].reverse();\r\n      response['a'] = response['b'];\r\n      response['b'] = a;\r\n      response['aInB'] = response['bInA'];\r\n      response['bInA'] = aInB;\r\n    }\r\n    return result;\r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/collision/util.ts","import {Box, Vector, Circle, Polygon}from './math';\r\nimport Response from './collision/response';\r\nimport {testCircleCircle,testPolygonCircle, testPolygonPolygon,testCirclePolygon} from './collision/util';\r\n\r\nexport {Box};\r\nexport {Vector};\r\nexport {Circle};\r\nexport {Polygon};\r\nexport {Response};\r\nexport {testCircleCircle};\r\nexport {testPolygonCircle};\r\nexport {testPolygonPolygon};\r\nexport {testCirclePolygon};\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import Vector from './vector';\r\nimport Box from './box';\r\nimport Polygon from './polygon';\r\n\r\nexport default class Circle{\r\n    pos: Vector;\r\n\r\n    r: number;\r\n\r\n  // ## Circle\r\n  //\r\n  // Represents a circle with a position and a radius.\r\n\r\n  // Create a new circle, optionally passing in a position and/or radius. If no position\r\n  // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\r\n  // have a radius of `0`.\r\n  /**\r\n   * @param {Vector=} pos A vector representing the position of the center of the circle\r\n   * @param {?number=} r The radius of the circle\r\n   * @constructor\r\n   */\r\n    constructor(pos:Vector = new Vector(),r:number = 0){\r\n        this.pos = pos;\r\n\r\n        this.r = r;\r\n    };\r\n\r\n    // Compute the axis-aligned bounding box (AABB) of this Circle.\r\n    //\r\n    // Note: Returns a _new_ `Polygon` each time you call this.\r\n    /**\r\n     * @return {Polygon} The AABB\r\n     */\r\n    getAABB():Polygon{\r\n        let r = this.r;\r\n        let corner = this.pos.clone().sub(new Vector(r,r));\r\n        return new Box(corner, r*2, r*2).toPolygon();\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/math/circle.ts","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 16\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 17\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 18\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 19\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 20\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 21\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 22\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 23\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 24\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 25\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 26\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 27\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}
